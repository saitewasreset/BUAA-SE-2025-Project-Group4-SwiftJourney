//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "hotel_room_type")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub type_name: String,
    pub capacity: i32,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub price: Decimal,
    pub hotel_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::hotel::Entity",
        from = "Column::HotelId",
        to = "super::hotel::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Hotel,
    #[sea_orm(has_many = "super::hotel_order::Entity")]
    HotelOrder,
    #[sea_orm(has_many = "super::occupied_room::Entity")]
    OccupiedRoom,
}

impl Related<super::hotel::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Hotel.def()
    }
}

impl Related<super::hotel_order::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::HotelOrder.def()
    }
}

impl Related<super::occupied_room::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OccupiedRoom.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}

//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "station")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub city_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::city::Entity",
        from = "Column::CityId",
        to = "super::city::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    City,
    #[sea_orm(has_many = "super::hotel::Entity")]
    Hotel,
    #[sea_orm(has_many = "super::route::Entity")]
    Route,
    #[sea_orm(has_many = "super::takeaway_shop::Entity")]
    TakeawayShop,
}

impl Related<super::city::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::City.def()
    }
}

impl Related<super::hotel::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Hotel.def()
    }
}

impl Related<super::route::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Route.def()
    }
}

impl Related<super::takeaway_shop::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TakeawayShop.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
